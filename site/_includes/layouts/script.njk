const liste = [
{%- for post in collections.all %}
  {
    emoji: "{{ post.data.emoji }}",
    couleur: "{{ post.data.couleur }}",
    adresse: "{{ post.data.adresse }}",
    titre: "{{ post.data.titre }}",
    date: {{ post.date.getTime() }},
    {%- if post.data.update %}
    update: {{ post.data.update.getTime() }},
    {%- else %}
    update: 0,
    {%- endif %}
  },
{%- endfor %}
];

const WEBRING_URL = "https://encemoment.site/";

const removeTrailingSlash = (str) => (str.replace(/\/$/, ""));

const tmpl = document.createElement('template');
tmpl.innerHTML = `
<style type="text/css">
  .wrapper {
    margin-block: 1.5em;
    display: flex;
    gap: 0.2rem 1rem;
    flex-wrap: wrap;
    justify-content: center;
    align-items: end;
    font-size: 14px;
    font-family: sans-serif;
  }

  p {
    flex: 1 0 100%;
    margin: 0;
    text-align: center;
  }

  a {
    text-decoration: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.2em;
    color: currentColor;
  }

  a span {
    display: inline-block;
  }

  a span:not([aria-hidden]) {
    font-size: 0.9em;
    font-weight: bold;
    text-decoration: underline;
    height: 1em;
    line-height: 1em;
  }

  a:visited span:not([aria-hidden]) {
    opacity: 0.9;
  }

  a span[aria-hidden] {
    font-size: 1.6em;
    height: 1.2em;
    padding: 0; margin: 0;
  }
</style>
<div part="wrapper" class="wrapper">
  <p part="p">Cette page est dans le Webring <strong>‚ÄúEn ce moment‚Äù</strong></p>
  <a part="a" rel="noopener noreferer" class="previous">
    <span aria-hidden>‚óÄÔ∏è</span>
    <span>Pr√©c√©dent</span>
  </a>
  <a part="a" rel="noopener noreferer" class="next">
    <span aria-hidden>‚ñ∂Ô∏è</span>
    <span>Suivant</span>
  </a>
  <a part="a" rel="noopener noreferer" class="random">
    <span aria-hidden>üîÄ</span>
    <span>Au hasard</span>
  </a>
  <a part="a" rel="noopener noreferer" class="origin">
    <span aria-hidden>‚èèÔ∏è</span>
    <span>Le Webring</span>
  </a>
</div>`;

class NowWebring extends HTMLElement {
  constructor() {
    super();
  }
  connectedCallback() {
    const currentUrl = removeTrailingSlash(window.location.href);

    const currentPageIndex = [...liste.keys()].filter(key => {
      return removeTrailingSlash(liste[key].adresse) === currentUrl;
    })[0];
    const currentPage = liste[currentPageIndex];
    const previousPage = liste[(currentPageIndex > 0 ? currentPageIndex : liste.length) - 1];
    const nextPage = liste[currentPageIndex < liste.length - 1 ? currentPageIndex + 1 : 0];

    let pullArray = [...Array(liste.length).keys()];
    pullArray = pullArray.filter(i => i !== currentPageIndex);
    const randomPull = pullArray[Math.floor(Math.random() * pullArray.length)];
    const randomPage = liste[randomPull ?? 0];

    let shadow = this.attachShadow({ mode: "open" });

    const content = tmpl.content.cloneNode(true);
    content.querySelector(".previous")?.setAttribute("href", previousPage.adresse);
    content.querySelector(".next")?.setAttribute("href", nextPage.adresse);
    content.querySelector(".random")?.setAttribute("href", randomPage.adresse);
    content.querySelector(".origin")?.setAttribute("href", WEBRING_URL);

    shadow.appendChild(content);
  }
};

customElements.define("now-webring", NowWebring);
